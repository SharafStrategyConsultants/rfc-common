// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  productId   Int        @id @default(autoincrement())
  name        String
  description String
  listPrice   String
  salePrice   String
  categoryId  Int?
  qty         Int
  tag         String
  sku         Int
  isDeleted   Boolean    @default(false)
  meta        meta[]
  category    Category?   @relation(fields: [categoryId], references: [categoryId])
  createdAt   DateTime   @default(now())
  updatedAt   DateTime?  @updatedAt
  cartItems   CartItem[]
}

model meta {
  metaId     Int       @id @default(autoincrement())
  productId  Int?
  imageUrl   String
  isDeleted  Boolean   @default(false)
  product    Product?  @relation(fields: [productId], references: [productId])
  categoryId Int?
  catogory   Category? @relation(fields: [categoryId], references: [categoryId])
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt
}

model Category {
  categoryId    Int           @id @default(autoincrement())
  name          String
  isDeleted     Boolean       @default(false)
  subCategories SubCategory[]
  products      Product[]
  meta          meta[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime?     @updatedAt
}

model SubCategory {
  subCategoryId Int       @id @default(autoincrement())
  name          String
  isDeleted     Boolean   @default(false)
  categoryId    Int
  category      Category  @relation(fields: [categoryId], references: [categoryId])
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt
}

model User {
  userId      Int         @id @default(autoincrement())
  firstName   String
  lastName    String?     @default("")
  email       String
  password    String?     @default("")
  phone       String
  userLogings UserLogin[]
  cart        Cart[]
  token       String      @unique
  createdAt   DateTime    @default(now())
  updatedAt   DateTime?   @updatedAt
}

model LoginLogs {
  LoginLogId Int       @id @default(autoincrement())
  phone      String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt
}

model UserLogin {
  userLoginId Int       @id @default(autoincrement())
  logout      Boolean   @default(false)
  fcm         String?
  deviceId    String?
  userId      Int
  user        User      @relation(fields: [userId], references: [userId])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
}

model Cart {
  cartId    Int        @id @default(autoincrement())
  userId    Int?
  user      User?      @relation(fields: [userId], references: [userId])
  cartItems CartItem[]
}

model CartItem {
  cartId    Int
  productId Int
  quantity  Int
  cart      Cart    @relation(fields: [cartId], references: [cartId])
  product   Product @relation(fields: [productId], references: [productId])

  @@id([cartId, productId])
}
